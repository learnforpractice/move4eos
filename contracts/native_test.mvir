modules:
module Test {
    resource T { i: u64, b: bool }

    public new_t(): R#Self.T {
        return T { i: 0, b: false };
    }

    public unpack_t(t: R#Self.T) {
        let i: u64;
        let flag: bool;
        T { i, b: flag } = move(t);
        return;
    }

}
module Hash {
    native public keccak25(data: bytearray): bytearray;
    native public ripemd160(data: bytearray): bytearray;
    native public sha2_256(data: bytearray): bytearray;
    native public sha3_256(data: bytearray): bytearray;
    native public print(data: bytearray);
}
script:
import 0x0.Test;
import 0x0.Hash;
main() {
    let input: bytearray;
    let output: bytearray;
    let t: R#Test.T;

    t = Test.new_t();
    Test.unpack_t(move(t));

    input = b"6162633333333333AA";
    output = Hash.print(copy(input));

    return;
}
